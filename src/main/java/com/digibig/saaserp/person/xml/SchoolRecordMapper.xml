<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digibig.saaserp.person.mapper.SchoolRecordMapper">
  <resultMap id="BaseResultMap" type="com.digibig.saaserp.person.domain.SchoolRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="certificate_number" jdbcType="VARCHAR" property="certificateNumber" />
    <result column="issuer" jdbcType="VARCHAR" property="issuer" />
    <result column="profession" jdbcType="VARCHAR" property="profession" />
    <result column="result" jdbcType="INTEGER" property="result" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="phase" jdbcType="INTEGER" property="phase" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="enabled" jdbcType="TINYINT" property="enabled" />
    <result column="file" jdbcType="INTEGER" property="file" />
    <result column="verification_status" jdbcType="INTEGER" property="verificationStatus" />
    <result column="verification_file" jdbcType="INTEGER" property="verificationFile" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, person_id, certificate_number, issuer, profession, result, type, phase, date, 
    enabled, file, verification_status, verification_file, create_time, last_time
  </sql>
  <select id="selectByExample" parameterType="com.digibig.saaserp.person.domain.SchoolRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_school_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_school_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_school_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.digibig.saaserp.person.domain.SchoolRecordExample">
    delete from t_school_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.digibig.saaserp.person.domain.SchoolRecord" useGeneratedKeys="true" keyProperty="id">
    insert into t_school_record (id, person_id, certificate_number, 
      issuer, profession, result, 
      type, phase, date, enabled, 
      file, verification_status, verification_file, 
      create_time, last_time)
    values (#{id,jdbcType=INTEGER}, #{personId,jdbcType=INTEGER}, #{certificateNumber,jdbcType=VARCHAR}, 
      #{issuer,jdbcType=VARCHAR}, #{profession,jdbcType=VARCHAR}, #{result,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{phase,jdbcType=INTEGER}, #{date,jdbcType=DATE}, #{enabled,jdbcType=TINYINT}, 
      #{file,jdbcType=INTEGER}, #{verificationStatus,jdbcType=INTEGER}, #{verificationFile,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.digibig.saaserp.person.domain.SchoolRecord" useGeneratedKeys="true" keyProperty="id">
    insert into t_school_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="certificateNumber != null">
        certificate_number,
      </if>
      <if test="issuer != null">
        issuer,
      </if>
      <if test="profession != null">
        profession,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="phase != null">
        phase,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="file != null">
        file,
      </if>
      <if test="verificationStatus != null">
        verification_status,
      </if>
      <if test="verificationFile != null">
        verification_file,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="certificateNumber != null">
        #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="issuer != null">
        #{issuer,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        #{profession,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        #{result,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="phase != null">
        #{phase,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=TINYINT},
      </if>
      <if test="file != null">
        #{file,jdbcType=INTEGER},
      </if>
      <if test="verificationStatus != null">
        #{verificationStatus,jdbcType=INTEGER},
      </if>
      <if test="verificationFile != null">
        #{verificationFile,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.digibig.saaserp.person.domain.SchoolRecordExample" resultType="java.lang.Long">
    select count(*) from t_school_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_school_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.personId != null">
        person_id = #{record.personId,jdbcType=INTEGER},
      </if>
      <if test="record.certificateNumber != null">
        certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.issuer != null">
        issuer = #{record.issuer,jdbcType=VARCHAR},
      </if>
      <if test="record.profession != null">
        profession = #{record.profession,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.phase != null">
        phase = #{record.phase,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=TINYINT},
      </if>
      <if test="record.file != null">
        file = #{record.file,jdbcType=INTEGER},
      </if>
      <if test="record.verificationStatus != null">
        verification_status = #{record.verificationStatus,jdbcType=INTEGER},
      </if>
      <if test="record.verificationFile != null">
        verification_file = #{record.verificationFile,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastTime != null">
        last_time = #{record.lastTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_school_record
    set id = #{record.id,jdbcType=INTEGER},
      person_id = #{record.personId,jdbcType=INTEGER},
      certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
      issuer = #{record.issuer,jdbcType=VARCHAR},
      profession = #{record.profession,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      phase = #{record.phase,jdbcType=INTEGER},
      date = #{record.date,jdbcType=DATE},
      enabled = #{record.enabled,jdbcType=TINYINT},
      file = #{record.file,jdbcType=INTEGER},
      verification_status = #{record.verificationStatus,jdbcType=INTEGER},
      verification_file = #{record.verificationFile,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_time = #{record.lastTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.digibig.saaserp.person.domain.SchoolRecord">
    update t_school_record
    <set>
      <if test="personId != null">
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="certificateNumber != null">
        certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="issuer != null">
        issuer = #{issuer,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="phase != null">
        phase = #{phase,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=TINYINT},
      </if>
      <if test="file != null">
        file = #{file,jdbcType=INTEGER},
      </if>
      <if test="verificationStatus != null">
        verification_status = #{verificationStatus,jdbcType=INTEGER},
      </if>
      <if test="verificationFile != null">
        verification_file = #{verificationFile,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.digibig.saaserp.person.domain.SchoolRecord">
    update t_school_record
    set person_id = #{personId,jdbcType=INTEGER},
      certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      issuer = #{issuer,jdbcType=VARCHAR},
      profession = #{profession,jdbcType=VARCHAR},
      result = #{result,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      phase = #{phase,jdbcType=INTEGER},
      date = #{date,jdbcType=DATE},
      enabled = #{enabled,jdbcType=TINYINT},
      file = #{file,jdbcType=INTEGER},
      verification_status = #{verificationStatus,jdbcType=INTEGER},
      verification_file = #{verificationFile,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>