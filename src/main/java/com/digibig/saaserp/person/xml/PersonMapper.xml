<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digibig.saaserp.person.mapper.PersonMapper">
  <resultMap id="BaseResultMap" type="com.digibig.saaserp.person.domain.Person">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="id_type" jdbcType="INTEGER" property="idType" />
    <result column="id_number" jdbcType="VARCHAR" property="idNumber" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="default_mobile" jdbcType="INTEGER" property="defaultMobile" />
    <result column="default_email" jdbcType="INTEGER" property="defaultEmail" />
    <result column="default_address" jdbcType="INTEGER" property="defaultAddress" />
    <result column="default_id_card" jdbcType="INTEGER" property="defaultIdCard" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, id_type, id_number, name, default_mobile, default_email, default_address, default_id_card, 
    create_time, last_time
  </sql>
  <select id="selectByExample" parameterType="com.digibig.saaserp.person.domain.PersonExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_person
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_person
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getdefaultMobile" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select 
    default_mobile
    from t_person
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getdefaultEmail" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select 
    default_email
    from t_person
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getdefaultAddress" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select 
    default_address
    from t_person
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getdefaultIDCard" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select 
    default_id_card
    from t_person
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <resultMap id="PersonByCardNumberMap" type="map">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="idCard" jdbcType="VARCHAR" property="idCard" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="addressId" jdbcType="INTEGER" property="addressId" />
  </resultMap>
  <sql id="getPerson">
  	select 
    p.id id, p.id_number idCard, p.name name,p.default_address addressId, e.email email,m.number mobile
    from t_person p
    left join t_person_email e on p.default_email = e.id
    left join t_person_mobile m on p.default_mobile = m.id
  </sql>
  <select id="getByCardNumber" parameterType="string" resultMap="PersonByCardNumberMap">
    <include refid="getPerson"></include>
    where p.id_number = #{IDCard,jdbcType=VARCHAR}
  </select>
  
  <select id="getPersonById" parameterType="java.lang.Integer" resultMap="PersonByCardNumberMap">
    <include refid="getPerson"></include>
    where p.id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_person
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.digibig.saaserp.person.domain.PersonExample">
    delete from t_person
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.digibig.saaserp.person.domain.Person" useGeneratedKeys="true" keyProperty="id">
    insert into t_person (id, id_type, id_number, 
      name, default_mobile, default_email, 
      default_address, default_id_card, create_time, 
      last_time)
    values (#{id,jdbcType=INTEGER}, #{idType,jdbcType=INTEGER}, #{idNumber,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{defaultMobile,jdbcType=INTEGER}, #{defaultEmail,jdbcType=INTEGER}, 
      #{defaultAddress,jdbcType=INTEGER}, #{defaultIdCard,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.digibig.saaserp.person.domain.Person" useGeneratedKeys="true" keyProperty="id">
    insert into t_person
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="idType != null">
        id_type,
      </if>
      <if test="idNumber != null">
        id_number,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="defaultMobile != null">
        default_mobile,
      </if>
      <if test="defaultEmail != null">
        default_email,
      </if>
      <if test="defaultAddress != null">
        default_address,
      </if>
      <if test="defaultIdCard != null">
        default_id_card,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="idType != null">
        #{idType,jdbcType=INTEGER},
      </if>
      <if test="idNumber != null">
        #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="defaultMobile != null">
        #{defaultMobile,jdbcType=INTEGER},
      </if>
      <if test="defaultEmail != null">
        #{defaultEmail,jdbcType=INTEGER},
      </if>
      <if test="defaultAddress != null">
        #{defaultAddress,jdbcType=INTEGER},
      </if>
      <if test="defaultIdCard != null">
        #{defaultIdCard,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.digibig.saaserp.person.domain.PersonExample" resultType="java.lang.Long">
    select count(*) from t_person
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_person
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.idType != null">
        id_type = #{record.idType,jdbcType=INTEGER},
      </if>
      <if test="record.idNumber != null">
        id_number = #{record.idNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultMobile != null">
        default_mobile = #{record.defaultMobile,jdbcType=INTEGER},
      </if>
      <if test="record.defaultEmail != null">
        default_email = #{record.defaultEmail,jdbcType=INTEGER},
      </if>
      <if test="record.defaultAddress != null">
        default_address = #{record.defaultAddress,jdbcType=INTEGER},
      </if>
      <if test="record.defaultIdCard != null">
        default_id_card = #{record.defaultIdCard,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastTime != null">
        last_time = #{record.lastTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_person
    set id = #{record.id,jdbcType=INTEGER},
      id_type = #{record.idType,jdbcType=INTEGER},
      id_number = #{record.idNumber,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      default_mobile = #{record.defaultMobile,jdbcType=INTEGER},
      default_email = #{record.defaultEmail,jdbcType=INTEGER},
      default_address = #{record.defaultAddress,jdbcType=INTEGER},
      default_id_card = #{record.defaultIdCard,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_time = #{record.lastTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.digibig.saaserp.person.domain.Person">
    update t_person
    <set>
      <if test="idType != null">
        id_type = #{idType,jdbcType=INTEGER},
      </if>
      <if test="idNumber != null">
        id_number = #{idNumber,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="defaultMobile != null">
        default_mobile = #{defaultMobile,jdbcType=INTEGER},
      </if>
      <if test="defaultEmail != null">
        default_email = #{defaultEmail,jdbcType=INTEGER},
      </if>
      <if test="defaultAddress != null">
        default_address = #{defaultAddress,jdbcType=INTEGER},
      </if>
      <if test="defaultIdCard != null">
        default_id_card = #{defaultIdCard,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.digibig.saaserp.person.domain.Person">
    update t_person
    set id_type = #{idType,jdbcType=INTEGER},
      id_number = #{idNumber,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      default_mobile = #{defaultMobile,jdbcType=INTEGER},
      default_email = #{defaultEmail,jdbcType=INTEGER},
      default_address = #{defaultAddress,jdbcType=INTEGER},
      default_id_card = #{defaultIdCard,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>