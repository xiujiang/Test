<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digibig.saaserp.person.mapper.DiplomaCertificateMapper">
  <resultMap id="BaseResultMap" type="com.digibig.saaserp.person.domain.DiplomaCertificate">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="issuer" jdbcType="VARCHAR" property="issuer" />
    <result column="diploma" jdbcType="VARCHAR" property="diploma" />
    <result column="certificate_number" jdbcType="VARCHAR" property="certificateNumber" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="profession" jdbcType="VARCHAR" property="profession" />
    <result column="enabled" jdbcType="TINYINT" property="enabled" />
    <result column="diploma_type" jdbcType="INTEGER" property="diplomaType" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="varification_status" jdbcType="INTEGER" property="varificationStatus" />
    <result column="file" jdbcType="INTEGER" property="file" />
    <result column="varification_file" jdbcType="INTEGER" property="varificationFile" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, person_id, issuer, diploma, certificate_number, date, profession, enabled, diploma_type, 
    type, varification_status, file, varification_file, create_time, last_time
  </sql>
  <select id="selectByExample" parameterType="com.digibig.saaserp.person.domain.DiplomaCertificateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_diploma_certificate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_diploma_certificate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_diploma_certificate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.digibig.saaserp.person.domain.DiplomaCertificateExample">
    delete from t_diploma_certificate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.digibig.saaserp.person.domain.DiplomaCertificate" useGeneratedKeys="true" keyProperty="id">
    insert into t_diploma_certificate (id, person_id, issuer, 
      diploma, certificate_number, date, 
      profession, enabled, diploma_type, 
      type, varification_status, file, 
      varification_file, create_time, last_time
      )
    values (#{id,jdbcType=INTEGER}, #{personId,jdbcType=INTEGER}, #{issuer,jdbcType=VARCHAR}, 
      #{diploma,jdbcType=VARCHAR}, #{certificateNumber,jdbcType=VARCHAR}, #{date,jdbcType=DATE}, 
      #{profession,jdbcType=VARCHAR}, #{enabled,jdbcType=TINYINT}, #{diplomaType,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{varificationStatus,jdbcType=INTEGER}, #{file,jdbcType=INTEGER}, 
      #{varificationFile,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{lastTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.digibig.saaserp.person.domain.DiplomaCertificate" useGeneratedKeys="true" keyProperty="id">
    insert into t_diploma_certificate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="issuer != null">
        issuer,
      </if>
      <if test="diploma != null">
        diploma,
      </if>
      <if test="certificateNumber != null">
        certificate_number,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="profession != null">
        profession,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="diplomaType != null">
        diploma_type,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="varificationStatus != null">
        varification_status,
      </if>
      <if test="file != null">
        file,
      </if>
      <if test="varificationFile != null">
        varification_file,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="issuer != null">
        #{issuer,jdbcType=VARCHAR},
      </if>
      <if test="diploma != null">
        #{diploma,jdbcType=VARCHAR},
      </if>
      <if test="certificateNumber != null">
        #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="profession != null">
        #{profession,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=TINYINT},
      </if>
      <if test="diplomaType != null">
        #{diplomaType,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="varificationStatus != null">
        #{varificationStatus,jdbcType=INTEGER},
      </if>
      <if test="file != null">
        #{file,jdbcType=INTEGER},
      </if>
      <if test="varificationFile != null">
        #{varificationFile,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.digibig.saaserp.person.domain.DiplomaCertificateExample" resultType="java.lang.Long">
    select count(*) from t_diploma_certificate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_diploma_certificate
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.personId != null">
        person_id = #{record.personId,jdbcType=INTEGER},
      </if>
      <if test="record.issuer != null">
        issuer = #{record.issuer,jdbcType=VARCHAR},
      </if>
      <if test="record.diploma != null">
        diploma = #{record.diploma,jdbcType=VARCHAR},
      </if>
      <if test="record.certificateNumber != null">
        certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.profession != null">
        profession = #{record.profession,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=TINYINT},
      </if>
      <if test="record.diplomaType != null">
        diploma_type = #{record.diplomaType,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.varificationStatus != null">
        varification_status = #{record.varificationStatus,jdbcType=INTEGER},
      </if>
      <if test="record.file != null">
        file = #{record.file,jdbcType=INTEGER},
      </if>
      <if test="record.varificationFile != null">
        varification_file = #{record.varificationFile,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastTime != null">
        last_time = #{record.lastTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_diploma_certificate
    set id = #{record.id,jdbcType=INTEGER},
      person_id = #{record.personId,jdbcType=INTEGER},
      issuer = #{record.issuer,jdbcType=VARCHAR},
      diploma = #{record.diploma,jdbcType=VARCHAR},
      certificate_number = #{record.certificateNumber,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=DATE},
      profession = #{record.profession,jdbcType=VARCHAR},
      enabled = #{record.enabled,jdbcType=TINYINT},
      diploma_type = #{record.diplomaType,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      varification_status = #{record.varificationStatus,jdbcType=INTEGER},
      file = #{record.file,jdbcType=INTEGER},
      varification_file = #{record.varificationFile,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_time = #{record.lastTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.digibig.saaserp.person.domain.DiplomaCertificate">
    update t_diploma_certificate
    <set>
      <if test="personId != null">
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="issuer != null">
        issuer = #{issuer,jdbcType=VARCHAR},
      </if>
      <if test="diploma != null">
        diploma = #{diploma,jdbcType=VARCHAR},
      </if>
      <if test="certificateNumber != null">
        certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="profession != null">
        profession = #{profession,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=TINYINT},
      </if>
      <if test="diplomaType != null">
        diploma_type = #{diplomaType,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="varificationStatus != null">
        varification_status = #{varificationStatus,jdbcType=INTEGER},
      </if>
      <if test="file != null">
        file = #{file,jdbcType=INTEGER},
      </if>
      <if test="varificationFile != null">
        varification_file = #{varificationFile,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.digibig.saaserp.person.domain.DiplomaCertificate">
    update t_diploma_certificate
    set person_id = #{personId,jdbcType=INTEGER},
      issuer = #{issuer,jdbcType=VARCHAR},
      diploma = #{diploma,jdbcType=VARCHAR},
      certificate_number = #{certificateNumber,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE},
      profession = #{profession,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=TINYINT},
      diploma_type = #{diplomaType,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      varification_status = #{varificationStatus,jdbcType=INTEGER},
      file = #{file,jdbcType=INTEGER},
      varification_file = #{varificationFile,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>