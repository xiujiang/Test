<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.digibig.saaserp.person.mapper.EducationSummaryMapper">
  <resultMap id="BaseResultMap" type="com.digibig.saaserp.person.domain.EducationSummary">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="person_id" jdbcType="INTEGER" property="personId" />
    <result column="last_degree" jdbcType="VARCHAR" property="lastDegree" />
    <result column="bachelor_degree_issuer" jdbcType="VARCHAR" property="bachelorDegreeIssuer" />
    <result column="bachelor_degree_profession" jdbcType="VARCHAR" property="bachelorDegreeProfession" />
    <result column="bachelor_degree_type" jdbcType="INTEGER" property="bachelorDegreeType" />
    <result column="bachelor_degree_year" jdbcType="INTEGER" property="bachelorDegreeYear" />
    <result column="bachelor_degree_ref_id" jdbcType="INTEGER" property="bachelorDegreeRefId" />
    <result column="bachelor_degree_verification" jdbcType="INTEGER" property="bachelorDegreeVerification" />
    <result column="master_degree_issuer" jdbcType="VARCHAR" property="masterDegreeIssuer" />
    <result column="master_degree_profession" jdbcType="VARCHAR" property="masterDegreeProfession" />
    <result column="master_degree_type" jdbcType="INTEGER" property="masterDegreeType" />
    <result column="master_degree_year" jdbcType="INTEGER" property="masterDegreeYear" />
    <result column="master_degree_ref_id" jdbcType="INTEGER" property="masterDegreeRefId" />
    <result column="master_degree_verification" jdbcType="INTEGER" property="masterDegreeVerification" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, person_id, last_degree, bachelor_degree_issuer, bachelor_degree_profession, bachelor_degree_type, 
    bachelor_degree_year, bachelor_degree_ref_id, bachelor_degree_verification, master_degree_issuer, 
    master_degree_profession, master_degree_type, master_degree_year, master_degree_ref_id, 
    master_degree_verification, create_time, last_time
  </sql>
  <select id="selectByExample" parameterType="com.digibig.saaserp.person.domain.EducationSummaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_education_summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_education_summary
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_education_summary
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.digibig.saaserp.person.domain.EducationSummaryExample">
    delete from t_education_summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.digibig.saaserp.person.domain.EducationSummary" useGeneratedKeys="true" keyProperty="id">
    insert into t_education_summary (id, person_id, last_degree, 
      bachelor_degree_issuer, bachelor_degree_profession, 
      bachelor_degree_type, bachelor_degree_year, 
      bachelor_degree_ref_id, bachelor_degree_verification, 
      master_degree_issuer, master_degree_profession, 
      master_degree_type, master_degree_year, master_degree_ref_id, 
      master_degree_verification, create_time, 
      last_time)
    values (#{id,jdbcType=INTEGER}, #{personId,jdbcType=INTEGER}, #{lastDegree,jdbcType=VARCHAR}, 
      #{bachelorDegreeIssuer,jdbcType=VARCHAR}, #{bachelorDegreeProfession,jdbcType=VARCHAR}, 
      #{bachelorDegreeType,jdbcType=INTEGER}, #{bachelorDegreeYear,jdbcType=INTEGER}, 
      #{bachelorDegreeRefId,jdbcType=INTEGER}, #{bachelorDegreeVerification,jdbcType=INTEGER}, 
      #{masterDegreeIssuer,jdbcType=VARCHAR}, #{masterDegreeProfession,jdbcType=VARCHAR}, 
      #{masterDegreeType,jdbcType=INTEGER}, #{masterDegreeYear,jdbcType=INTEGER}, #{masterDegreeRefId,jdbcType=INTEGER}, 
      #{masterDegreeVerification,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.digibig.saaserp.person.domain.EducationSummary" useGeneratedKeys="true" keyProperty="id">
    insert into t_education_summary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="lastDegree != null">
        last_degree,
      </if>
      <if test="bachelorDegreeIssuer != null">
        bachelor_degree_issuer,
      </if>
      <if test="bachelorDegreeProfession != null">
        bachelor_degree_profession,
      </if>
      <if test="bachelorDegreeType != null">
        bachelor_degree_type,
      </if>
      <if test="bachelorDegreeYear != null">
        bachelor_degree_year,
      </if>
      <if test="bachelorDegreeRefId != null">
        bachelor_degree_ref_id,
      </if>
      <if test="bachelorDegreeVerification != null">
        bachelor_degree_verification,
      </if>
      <if test="masterDegreeIssuer != null">
        master_degree_issuer,
      </if>
      <if test="masterDegreeProfession != null">
        master_degree_profession,
      </if>
      <if test="masterDegreeType != null">
        master_degree_type,
      </if>
      <if test="masterDegreeYear != null">
        master_degree_year,
      </if>
      <if test="masterDegreeRefId != null">
        master_degree_ref_id,
      </if>
      <if test="masterDegreeVerification != null">
        master_degree_verification,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=INTEGER},
      </if>
      <if test="lastDegree != null">
        #{lastDegree,jdbcType=VARCHAR},
      </if>
      <if test="bachelorDegreeIssuer != null">
        #{bachelorDegreeIssuer,jdbcType=VARCHAR},
      </if>
      <if test="bachelorDegreeProfession != null">
        #{bachelorDegreeProfession,jdbcType=VARCHAR},
      </if>
      <if test="bachelorDegreeType != null">
        #{bachelorDegreeType,jdbcType=INTEGER},
      </if>
      <if test="bachelorDegreeYear != null">
        #{bachelorDegreeYear,jdbcType=INTEGER},
      </if>
      <if test="bachelorDegreeRefId != null">
        #{bachelorDegreeRefId,jdbcType=INTEGER},
      </if>
      <if test="bachelorDegreeVerification != null">
        #{bachelorDegreeVerification,jdbcType=INTEGER},
      </if>
      <if test="masterDegreeIssuer != null">
        #{masterDegreeIssuer,jdbcType=VARCHAR},
      </if>
      <if test="masterDegreeProfession != null">
        #{masterDegreeProfession,jdbcType=VARCHAR},
      </if>
      <if test="masterDegreeType != null">
        #{masterDegreeType,jdbcType=INTEGER},
      </if>
      <if test="masterDegreeYear != null">
        #{masterDegreeYear,jdbcType=INTEGER},
      </if>
      <if test="masterDegreeRefId != null">
        #{masterDegreeRefId,jdbcType=INTEGER},
      </if>
      <if test="masterDegreeVerification != null">
        #{masterDegreeVerification,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.digibig.saaserp.person.domain.EducationSummaryExample" resultType="java.lang.Long">
    select count(*) from t_education_summary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_education_summary
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.personId != null">
        person_id = #{record.personId,jdbcType=INTEGER},
      </if>
      <if test="record.lastDegree != null">
        last_degree = #{record.lastDegree,jdbcType=VARCHAR},
      </if>
      <if test="record.bachelorDegreeIssuer != null">
        bachelor_degree_issuer = #{record.bachelorDegreeIssuer,jdbcType=VARCHAR},
      </if>
      <if test="record.bachelorDegreeProfession != null">
        bachelor_degree_profession = #{record.bachelorDegreeProfession,jdbcType=VARCHAR},
      </if>
      <if test="record.bachelorDegreeType != null">
        bachelor_degree_type = #{record.bachelorDegreeType,jdbcType=INTEGER},
      </if>
      <if test="record.bachelorDegreeYear != null">
        bachelor_degree_year = #{record.bachelorDegreeYear,jdbcType=INTEGER},
      </if>
      <if test="record.bachelorDegreeRefId != null">
        bachelor_degree_ref_id = #{record.bachelorDegreeRefId,jdbcType=INTEGER},
      </if>
      <if test="record.bachelorDegreeVerification != null">
        bachelor_degree_verification = #{record.bachelorDegreeVerification,jdbcType=INTEGER},
      </if>
      <if test="record.masterDegreeIssuer != null">
        master_degree_issuer = #{record.masterDegreeIssuer,jdbcType=VARCHAR},
      </if>
      <if test="record.masterDegreeProfession != null">
        master_degree_profession = #{record.masterDegreeProfession,jdbcType=VARCHAR},
      </if>
      <if test="record.masterDegreeType != null">
        master_degree_type = #{record.masterDegreeType,jdbcType=INTEGER},
      </if>
      <if test="record.masterDegreeYear != null">
        master_degree_year = #{record.masterDegreeYear,jdbcType=INTEGER},
      </if>
      <if test="record.masterDegreeRefId != null">
        master_degree_ref_id = #{record.masterDegreeRefId,jdbcType=INTEGER},
      </if>
      <if test="record.masterDegreeVerification != null">
        master_degree_verification = #{record.masterDegreeVerification,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastTime != null">
        last_time = #{record.lastTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_education_summary
    set id = #{record.id,jdbcType=INTEGER},
      person_id = #{record.personId,jdbcType=INTEGER},
      last_degree = #{record.lastDegree,jdbcType=VARCHAR},
      bachelor_degree_issuer = #{record.bachelorDegreeIssuer,jdbcType=VARCHAR},
      bachelor_degree_profession = #{record.bachelorDegreeProfession,jdbcType=VARCHAR},
      bachelor_degree_type = #{record.bachelorDegreeType,jdbcType=INTEGER},
      bachelor_degree_year = #{record.bachelorDegreeYear,jdbcType=INTEGER},
      bachelor_degree_ref_id = #{record.bachelorDegreeRefId,jdbcType=INTEGER},
      bachelor_degree_verification = #{record.bachelorDegreeVerification,jdbcType=INTEGER},
      master_degree_issuer = #{record.masterDegreeIssuer,jdbcType=VARCHAR},
      master_degree_profession = #{record.masterDegreeProfession,jdbcType=VARCHAR},
      master_degree_type = #{record.masterDegreeType,jdbcType=INTEGER},
      master_degree_year = #{record.masterDegreeYear,jdbcType=INTEGER},
      master_degree_ref_id = #{record.masterDegreeRefId,jdbcType=INTEGER},
      master_degree_verification = #{record.masterDegreeVerification,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_time = #{record.lastTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.digibig.saaserp.person.domain.EducationSummary">
    update t_education_summary
    <set>
      <if test="personId != null">
        person_id = #{personId,jdbcType=INTEGER},
      </if>
      <if test="lastDegree != null">
        last_degree = #{lastDegree,jdbcType=VARCHAR},
      </if>
      <if test="bachelorDegreeIssuer != null">
        bachelor_degree_issuer = #{bachelorDegreeIssuer,jdbcType=VARCHAR},
      </if>
      <if test="bachelorDegreeProfession != null">
        bachelor_degree_profession = #{bachelorDegreeProfession,jdbcType=VARCHAR},
      </if>
      <if test="bachelorDegreeType != null">
        bachelor_degree_type = #{bachelorDegreeType,jdbcType=INTEGER},
      </if>
      <if test="bachelorDegreeYear != null">
        bachelor_degree_year = #{bachelorDegreeYear,jdbcType=INTEGER},
      </if>
      <if test="bachelorDegreeRefId != null">
        bachelor_degree_ref_id = #{bachelorDegreeRefId,jdbcType=INTEGER},
      </if>
      <if test="bachelorDegreeVerification != null">
        bachelor_degree_verification = #{bachelorDegreeVerification,jdbcType=INTEGER},
      </if>
      <if test="masterDegreeIssuer != null">
        master_degree_issuer = #{masterDegreeIssuer,jdbcType=VARCHAR},
      </if>
      <if test="masterDegreeProfession != null">
        master_degree_profession = #{masterDegreeProfession,jdbcType=VARCHAR},
      </if>
      <if test="masterDegreeType != null">
        master_degree_type = #{masterDegreeType,jdbcType=INTEGER},
      </if>
      <if test="masterDegreeYear != null">
        master_degree_year = #{masterDegreeYear,jdbcType=INTEGER},
      </if>
      <if test="masterDegreeRefId != null">
        master_degree_ref_id = #{masterDegreeRefId,jdbcType=INTEGER},
      </if>
      <if test="masterDegreeVerification != null">
        master_degree_verification = #{masterDegreeVerification,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.digibig.saaserp.person.domain.EducationSummary">
    update t_education_summary
    set person_id = #{personId,jdbcType=INTEGER},
      last_degree = #{lastDegree,jdbcType=VARCHAR},
      bachelor_degree_issuer = #{bachelorDegreeIssuer,jdbcType=VARCHAR},
      bachelor_degree_profession = #{bachelorDegreeProfession,jdbcType=VARCHAR},
      bachelor_degree_type = #{bachelorDegreeType,jdbcType=INTEGER},
      bachelor_degree_year = #{bachelorDegreeYear,jdbcType=INTEGER},
      bachelor_degree_ref_id = #{bachelorDegreeRefId,jdbcType=INTEGER},
      bachelor_degree_verification = #{bachelorDegreeVerification,jdbcType=INTEGER},
      master_degree_issuer = #{masterDegreeIssuer,jdbcType=VARCHAR},
      master_degree_profession = #{masterDegreeProfession,jdbcType=VARCHAR},
      master_degree_type = #{masterDegreeType,jdbcType=INTEGER},
      master_degree_year = #{masterDegreeYear,jdbcType=INTEGER},
      master_degree_ref_id = #{masterDegreeRefId,jdbcType=INTEGER},
      master_degree_verification = #{masterDegreeVerification,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>